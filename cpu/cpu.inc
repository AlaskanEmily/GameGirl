
GG_OPCODE(0x00, 1, 4)
GG_OPCODE_NO_ARG( nop )
GG_NOP()
GG_END_OPCODE(0x00)

GG_OPCODE(0x01, 3, 12)
GG_OPCODE_REG16_IMM16( ld, bc )
GG_LD_IMM16( BC )
GG_END_OPCODE(0x01)

GG_OPCODE(0x02, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, bc, a )
GG_LD_REGPTR_REG8( BC, A )
GG_END_OPCODE(0x02)

GG_OPCODE(0x03, 1, 8)
GG_OPCODE_REG16( inc, bc )
GG_INC_REG16( BC )
GG_END_OPCODE(0x03)

GG_OPCODE(0x04, 1, 4)
GG_OPCODE_REG8( inc, b )
GG_INC_REG8( B )
GG_END_OPCODE(0x04)

GG_OPCODE(0x05, 1, 4)
GG_OPCODE_REG8( dec, b )
GG_DEC_REG8( B )
GG_END_OPCODE(0x05)

GG_OPCODE(0x06, 2, 8)
GG_OPCODE_REG8_IMM8( ld, b )
GG_LD_IMM8( B )
GG_END_OPCODE(0x06)

GG_OPCODE(0x07, 1, 4)
GG_OPCODE_REGA( rlc )
GG_RLC_REG8( A )
GG_END_OPCODE(0x07)

GG_OPCODE(0x08, 2, 4)
GG_OPCODE_IMM16_REG16( ld, sp )
GG_SAVE_SP( )
GG_END_OPCODE(0x08)

GG_OPCODE(0x09, 1, 8)
GG_OPCODE_REG16_REG16( add, hl, bc )
GG_ADD_REG16_REG16( HL, BC )
GG_END_OPCODE(0x09)

GG_OPCODE(0x0A, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, a, bc )
GG_LD_REG8_REGPTR( A, BC )
GG_END_OPCODE(0x0A)

GG_OPCODE(0x0B, 1, 8)
GG_OPCODE_REG16( dec, bc )
GG_DEC_REG16( BC )
GG_END_OPCODE(0x0B)

GG_OPCODE(0x0C, 1, 4)
GG_OPCODE_REG8( inc, c )
GG_INC_REG8( C )
GG_END_OPCODE(0x0C)

GG_OPCODE(0x0D, 1, 4)
GG_OPCODE_REG8( dec, c )
GG_DEC_REG8( C )
GG_END_OPCODE(0x0D)

GG_OPCODE(0x0E, 2, 8)
GG_OPCODE_REG8_IMM8( ld, c )
GG_LD_IMM8( C )
GG_END_OPCODE(0x0E)

GG_OPCODE(0x0F, 1, 4)
GG_OPCODE_REGA( rrc )
GG_RRC_REG8( A )
GG_END_OPCODE(0x0F)

GG_OPCODE(0x10, 2, 4)
GG_OPCODE_NO_ARG( stop )
GG_STOP( )
GG_END_OPCODE(0x10)

GG_OPCODE(0x11, 3, 12)
GG_OPCODE_REG16_IMM16( ld, de )
GG_LD_IMM16( DE )
GG_END_OPCODE(0x11)

GG_OPCODE(0x12, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, de, a )
GG_LD_REGPTR_REG8( DE, A )
GG_END_OPCODE(0x12)

GG_OPCODE(0x13, 1, 8)
GG_OPCODE_REG16( inc, de )
GG_INC_REG16( DE )
GG_END_OPCODE(0x13)

GG_OPCODE(0x14, 1, 4)
GG_OPCODE_REG8( inc, d )
GG_INC_REG8( D )
GG_END_OPCODE(0x14)

GG_OPCODE(0x15, 1, 4)
GG_OPCODE_REG8( inc, d )
GG_DEC_REG8( D )
GG_END_OPCODE(0x15)

GG_OPCODE(0x16, 2, 8)
GG_OPCODE_REG8_IMM8( inc, d )
GG_LD_IMM8( D )
GG_END_OPCODE(0x16)

GG_OPCODE(0x17, 1, 4)
GG_OPCODE_REGA( rl )
GG_RL_REG8( A )
GG_END_OPCODE(0x17)

GG_OPCODE(0x18, 2, 12)
GG_OPCODE_SIMM8( jr )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_JREL8( TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x18)

GG_OPCODE(0x19, 1, 8)
GG_OPCODE_REG16_REG16( add, hl, de )
GG_ADD_REG16_REG16( HL, DE )
GG_END_OPCODE(0x19)

GG_OPCODE(0x1A, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, a, de )
GG_LD_REG8_REGPTR( A, DE )
GG_END_OPCODE(0x1A)

GG_OPCODE(0x1B, 1, 8)
GG_OPCODE_REG16( dec, de )
GG_DEC_REG16( DE )
GG_END_OPCODE(0x1B)

GG_OPCODE(0x1C, 1, 4)
GG_OPCODE_REG8( inc, e )
GG_INC_REG8( E )
GG_END_OPCODE(0x1C)

GG_OPCODE(0x1D, 1, 4)
GG_OPCODE_REG8( dec, e )
GG_DEC_REG8( E )
GG_END_OPCODE(0x1D)

GG_OPCODE(0x1E, 2, 8)
GG_OPCODE_REG8_IMM8( ld, e )
GG_LD_IMM8( E )
GG_END_OPCODE(0x1E)

GG_OPCODE(0x1F, 1, 4)
GG_OPCODE_REGA( rr )
GG_RR_REG8( A )
GG_END_OPCODE(0x1F)

GG_OPCODE(0x20, 2, 8)
GG_OPCODE_SIMM8( jrnz )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BEGIN_IF_NOT_FLAG( ZERO )
    GG_JREL8( TMP0 )
    GG_TIME( 4 )
GG_END_IF_NOT_FLAG( ZERO )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x20)

GG_OPCODE(0x21, 3, 12)
GG_OPCODE_REG16_IMM16( ld, hl )
GG_LD_IMM16( HL )
GG_END_OPCODE(0x21)

GG_OPCODE(0x22, 1, 8)
GG_OPCODE_REGPTR_REG8( ldi, hl, a )
GG_LD_REGPTR_REG8( HL, A )
GG_INC_REG16( HL )
GG_END_OPCODE(0x22)

GG_OPCODE(0x23, 1, 8)
GG_OPCODE_REG16( inc, hl )
GG_INC_REG16( HL )
GG_END_OPCODE(0x23)

GG_OPCODE(0x24, 1, 4)
GG_OPCODE_REG8( inc, h )
GG_INC_REG8( H )
GG_END_OPCODE(0x24)

GG_OPCODE(0x25, 1, 4)
GG_OPCODE_REG8( dec, h )
GG_DEC_REG8( H )
GG_END_OPCODE(0x25)

GG_OPCODE(0x26, 2, 8)
GG_OPCODE_REG8_IMM8( ld, h )
GG_LD_IMM8( H )
GG_END_OPCODE(0x26)

GG_OPCODE(0x27, 1, 4)
GG_OPCODE_REGA( daa )
GG_DAA( )
GG_END_OPCODE(0x27)

GG_OPCODE(0x28, 2, 8)
GG_OPCODE_SIMM8( jrz )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BEGIN_IF_FLAG( ZERO )
    GG_JREL8( TMP0 )
    GG_TIME( 4 )
GG_END_IF_FLAG( ZERO )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x28)

GG_OPCODE(0x29, 1, 8)
GG_OPCODE_REG16_REG16( add, hl, hl )
GG_ADD_REG16_REG16( HL, HL )
GG_END_OPCODE(0x29)

GG_OPCODE(0x2A, 1, 8)
GG_OPCODE_REG8_REGPTR( ldi, a, hl )
GG_LD_REG8_REGPTR( A, HL )
GG_INC_REG16( HL )
GG_END_OPCODE(0x2A)

GG_OPCODE(0x2B, 1, 8)
GG_OPCODE_REG16( inc, hl )
GG_DEC_REG16( HL )
GG_END_OPCODE(0x2B)

GG_OPCODE(0x2C, 1, 4)
GG_OPCODE_REG8( inc, l )
GG_INC_REG8( L )
GG_END_OPCODE(0x2C)

GG_OPCODE(0x2D, 1, 4)
GG_OPCODE_REG8( dec, l )
GG_DEC_REG8( L )
GG_END_OPCODE(0x2D)

GG_OPCODE(0x2E, 2, 8)
GG_OPCODE_REG8_IMM8( ld, l )
GG_LD_IMM8( L )
GG_END_OPCODE(0x2E)

GG_OPCODE(0x2F, 1, 4)
GG_OPCODE_REGA( cpl )
GG_CPL_REG8( A )
GG_SET_FLAG2( HALF_CARRY, OPERATION )
GG_END_OPCODE(0x2F)

GG_OPCODE(0x30, 2, 8)
GG_OPCODE_SIMM8( jrnc )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BEGIN_IF_NOT_FLAG( CARRY )
    GG_JREL8( TMP0 )
    GG_TIME( 4 )
GG_END_IF_NOT_FLAG( CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x30)

GG_OPCODE(0x31, 3, 12)
GG_OPCODE_REG16_IMM16( ld, sp )
GG_LD_IMM16( SP )
GG_END_OPCODE(0x31)

GG_OPCODE(0x32, 1, 8)
GG_OPCODE_REGPTR_REG8( ldd, hl, a )
GG_LD_REGPTR_REG8( HL, A )
GG_DEC_REG16( HL )
GG_END_OPCODE(0x32)

GG_OPCODE(0x33, 1, 8)
GG_OPCODE_REG16( inc, sp )
GG_INC_REG16( SP )
GG_END_OPCODE(0x33)

GG_OPCODE(0x34, 1, 12)
GG_OPCODE_REGPTR( inc, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_INC_REG8( TMP0 )
GG_LD_REGPTR_REG8( HL, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x34)

GG_OPCODE(0x35, 1, 12)
GG_OPCODE_REGPTR( dec, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_DEC_REG8( TMP0 )
GG_LD_REGPTR_REG8( HL, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x35)

GG_OPCODE(0x36, 2, 12)
GG_OPCODE_REGPTR_IMM8( ld, hl )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_LD_REGPTR_REG8( HL, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x36)

GG_OPCODE(0x37, 1, 4)
GG_OPCODE_NO_ARG( scf )
GG_SET_FLAG( CARRY )
GG_CLEAR_FLAG2( OPERATION, HALF_CARRY )
GG_END_OPCODE(0x37)

GG_OPCODE(0x38, 2, 8)
GG_OPCODE_SIMM8( jrc )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BEGIN_IF_FLAG( CARRY )
    GG_JREL8( TMP0 )
    GG_TIME( 4 )
GG_END_IF_FLAG( CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x38)

GG_OPCODE(0x39, 1, 8)
GG_OPCODE_REG16_REG16( add, hl, sp )
GG_ADD_REG16_REG16( HL, SP )
GG_END_OPCODE(0x39)

GG_OPCODE(0x3A, 1, 8)
GG_OPCODE_REG8_REGPTR( ldd, a, hl )
GG_LD_REG8_REGPTR( A, HL )
GG_DEC_REG16( HL )
GG_END_OPCODE(0x3A)

GG_OPCODE(0x3B, 1, 8)
GG_OPCODE_REG16( dec, sp )
GG_DEC_REG16( SP )
GG_END_OPCODE(0x3B)

GG_OPCODE(0x3C, 1, 4)
GG_OPCODE_REG8( inc, a )
GG_INC_REG8( A )
GG_END_OPCODE(0x3C)

GG_OPCODE(0x3D, 1, 4)
GG_OPCODE_REG8( dec, a )
GG_DEC_REG8( A )
GG_END_OPCODE(0x3D)

GG_OPCODE(0x3E, 2, 8)
GG_OPCODE_REG8_IMM8( ld, a )
GG_LD_IMM8( A )
GG_END_OPCODE(0x3E)

GG_OPCODE(0x3F, 1, 4)
GG_OPCODE_NO_ARG( ccf )
GG_CLEAR_FLAG3( CARRY, OPERATION, HALF_CARRY )
GG_END_OPCODE(0x3F)

GG_OPCODE(0x40, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, b )
GG_LD_REG_REG( B, B )
GG_END_OPCODE(0x40)

GG_OPCODE(0x41, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, c )
GG_LD_REG_REG( B, C )
GG_END_OPCODE(0x41)

GG_OPCODE(0x42, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, d )
GG_LD_REG_REG( B, D )
GG_END_OPCODE(0x42)

GG_OPCODE(0x43, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, e )
GG_LD_REG_REG( B, E )
GG_END_OPCODE(0x43)

GG_OPCODE(0x44, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, h )
GG_LD_REG_REG( B, H )
GG_END_OPCODE(0x44)

GG_OPCODE(0x45, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, l )
GG_LD_REG_REG( B, L )
GG_END_OPCODE(0x45)

GG_OPCODE(0x46, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, b, hl )
GG_LD_REG8_REGPTR( B, HL )
GG_END_OPCODE(0x46)

GG_OPCODE(0x47, 1, 4)
GG_OPCODE_REG8_REG8( ld, b, a )
GG_LD_REG_REG( B, A )
GG_END_OPCODE(0x47)

GG_OPCODE(0x48, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, b )
GG_LD_REG_REG( C, B )
GG_END_OPCODE(0x48)

GG_OPCODE(0x49, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, c )
GG_LD_REG_REG( C, C )
GG_END_OPCODE(0x49)

GG_OPCODE(0x4A, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, d )
GG_LD_REG_REG( C, D )
GG_END_OPCODE(0x4A)

GG_OPCODE(0x4B, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, e )
GG_LD_REG_REG( C, E )
GG_END_OPCODE(0x4B)

GG_OPCODE(0x4C, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, h )
GG_LD_REG_REG( C, H )
GG_END_OPCODE(0x4C)

GG_OPCODE(0x4D, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, l )
GG_LD_REG_REG( C, L )
GG_END_OPCODE(0x4D)

GG_OPCODE(0x4E, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, c, hl )
GG_LD_REG8_REGPTR( C, HL )
GG_END_OPCODE(0x4E)

GG_OPCODE(0x4F, 1, 4)
GG_OPCODE_REG8_REG8( ld, c, a )
GG_LD_REG_REG( C, A )
GG_END_OPCODE(0x4F)

GG_OPCODE(0x50, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, b )
GG_LD_REG_REG( D, B )
GG_END_OPCODE(0x50)

GG_OPCODE(0x51, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, c )
GG_LD_REG_REG( D, C )
GG_END_OPCODE(0x51)

GG_OPCODE(0x52, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, d )
GG_LD_REG_REG( D, D )
GG_END_OPCODE(0x52)

GG_OPCODE(0x53, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, e )
GG_LD_REG_REG( D, E )
GG_END_OPCODE(0x53)

GG_OPCODE(0x54, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, h )
GG_LD_REG_REG( D, H )
GG_END_OPCODE(0x54)

GG_OPCODE(0x55, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, l )
GG_LD_REG_REG( D, L )
GG_END_OPCODE(0x55)

GG_OPCODE(0x56, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, d, hl )
GG_LD_REG8_REGPTR( D, HL )
GG_END_OPCODE(0x56)

GG_OPCODE(0x57, 1, 4)
GG_OPCODE_REG8_REG8( ld, d, a )
GG_LD_REG_REG( D, A )
GG_END_OPCODE(0x57)

GG_OPCODE(0x58, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, b )
GG_LD_REG_REG( E, B )
GG_END_OPCODE(0x58)

GG_OPCODE(0x59, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, c )
GG_LD_REG_REG( E, C )
GG_END_OPCODE(0x59)

GG_OPCODE(0x5A, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, d )
GG_LD_REG_REG( E, D )
GG_END_OPCODE(0x5A)

GG_OPCODE(0x5B, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, e )
GG_LD_REG_REG( E, E )
GG_END_OPCODE(0x5B)

GG_OPCODE(0x5C, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, h )
GG_LD_REG_REG( E, H )
GG_END_OPCODE(0x5C)

GG_OPCODE(0x5D, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, l )
GG_LD_REG_REG( E, L )
GG_END_OPCODE(0x5D)

GG_OPCODE(0x5E, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, e, hl )
GG_LD_REG8_REGPTR( E, HL )
GG_END_OPCODE(0x5E)

GG_OPCODE(0x5F, 1, 4)
GG_OPCODE_REG8_REG8( ld, e, a )
GG_LD_REG_REG( E, A )
GG_END_OPCODE(0x5F)

GG_OPCODE(0x60, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, b )
GG_LD_REG_REG( H, B )
GG_END_OPCODE(0x60)

GG_OPCODE(0x61, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, c )
GG_LD_REG_REG( H, C )
GG_END_OPCODE(0x61)

GG_OPCODE(0x62, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, d )
GG_LD_REG_REG( H, D )
GG_END_OPCODE(0x62)

GG_OPCODE(0x63, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, e )
GG_LD_REG_REG( H, E )
GG_END_OPCODE(0x63)

GG_OPCODE(0x64, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, h )
GG_LD_REG_REG( H, H )
GG_END_OPCODE(0x64)

GG_OPCODE(0x65, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, l )
GG_LD_REG_REG( H, L )
GG_END_OPCODE(0x65)

GG_OPCODE(0x66, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, h, hl )
GG_LD_REG8_REGPTR( H, HL )
GG_END_OPCODE(0x66)

GG_OPCODE(0x67, 1, 4)
GG_OPCODE_REG8_REG8( ld, h, a )
GG_LD_REG_REG( H, A )
GG_END_OPCODE(0x67)

GG_OPCODE(0x68, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, b )
GG_LD_REG_REG( L, B )
GG_END_OPCODE(0x68)

GG_OPCODE(0x69, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, c )
GG_LD_REG_REG( L, C )
GG_END_OPCODE(0x69)

GG_OPCODE(0x6A, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, d )
GG_LD_REG_REG( L, D )
GG_END_OPCODE(0x6A)

GG_OPCODE(0x6B, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, e )
GG_LD_REG_REG( L, E )
GG_END_OPCODE(0x6B)

GG_OPCODE(0x6C, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, h )
GG_LD_REG_REG( L, H )
GG_END_OPCODE(0x6C)

GG_OPCODE(0x6D, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, l )
GG_LD_REG_REG( L, L )
GG_END_OPCODE(0x6D)

GG_OPCODE(0x6E, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, l, hl )
GG_LD_REG8_REGPTR( L, HL )
GG_END_OPCODE(0x6E)

GG_OPCODE(0x6F, 1, 4)
GG_OPCODE_REG8_REG8( ld, l, a )
GG_LD_REG_REG( L, A )
GG_END_OPCODE(0x6F)

GG_OPCODE(0x70, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, b )
GG_LD_REGPTR_REG8( HL, B )
GG_END_OPCODE(0x70)

GG_OPCODE(0x71, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, c )
GG_LD_REGPTR_REG8( HL, C )
GG_END_OPCODE(0x71)

GG_OPCODE(0x72, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, d )
GG_LD_REGPTR_REG8( HL, D )
GG_END_OPCODE(0x72)

GG_OPCODE(0x73, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, e )
GG_LD_REGPTR_REG8( HL, E )
GG_END_OPCODE(0x73)

GG_OPCODE(0x74, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, h )
GG_LD_REGPTR_REG8( HL, H )
GG_END_OPCODE(0x74)

GG_OPCODE(0x75, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, l )
GG_LD_REGPTR_REG8( HL, L )
GG_END_OPCODE(0x75)

GG_OPCODE(0x76, 1, 4)
GG_OPCODE_NO_ARG( halt )
GG_HALT( )
GG_END_OPCODE(0x76)

GG_OPCODE(0x77, 1, 8)
GG_OPCODE_REGPTR_REG8( ld, hl, a )
GG_LD_REGPTR_REG8( HL, A )
GG_END_OPCODE(0x77)

GG_OPCODE(0x78, 1, 4)
GG_OPCODE_REG8_REG8( ld, a, b )
GG_LD_REG_REG( A, B )
GG_END_OPCODE(0x78)

GG_OPCODE(0x79, 1, 4)
GG_OPCODE_REG8_REG8( ld, a, c )
GG_LD_REG_REG( A, C )
GG_END_OPCODE(0x79)

GG_OPCODE(0x7A, 1, 4)
GG_OPCODE_REG8_REG8( ld, a, d )
GG_LD_REG_REG( A, D )
GG_END_OPCODE(0x7A)

GG_OPCODE(0x7B, 1, 4)
GG_OPCODE_REG8_REG8( ld, a, e )
GG_LD_REG_REG( A, E )
GG_END_OPCODE(0x7B)

GG_OPCODE(0x7C, 1,4)
GG_OPCODE_REG8_REG8( ld, a, h )
GG_LD_REG_REG( A, H )
GG_END_OPCODE(0x7C)

GG_OPCODE(0x7D, 1, 4)
GG_OPCODE_REG8_REG8( ld, a, l )
GG_LD_REG_REG( A, L )
GG_END_OPCODE(0x7D)

GG_OPCODE(0x7E, 1, 8)
GG_OPCODE_REG8_REGPTR( ld, a, hl )
GG_LD_REG8_REGPTR( A, HL )
GG_END_OPCODE(0x75)

GG_OPCODE(0x7F, 1, 4)
GG_OPCODE_REG8_REG8( ld, a, a )
GG_LD_REG_REG( A, A )
GG_END_OPCODE(0x7F)

GG_OPCODE(0x80, 1, 4)
GG_OPCODE_REG8_REG8( add, a, b )
GG_ADD_REG8_REG8( A, B )
GG_END_OPCODE(0x80)

GG_OPCODE(0x81, 1, 4)
GG_OPCODE_REG8_REG8( add, a, c )
GG_ADD_REG8_REG8( A, C )
GG_END_OPCODE(0x81)

GG_OPCODE(0x82, 1, 4)
GG_OPCODE_REG8_REG8( add, a, d )
GG_ADD_REG8_REG8( A, D )
GG_END_OPCODE(0x82)

GG_OPCODE(0x83, 1, 4)
GG_OPCODE_REG8_REG8( add, a, e )
GG_ADD_REG8_REG8( A, E )
GG_END_OPCODE(0x83)

GG_OPCODE(0x84, 1, 4)
GG_OPCODE_REG8_REG8( add, a, h )
GG_ADD_REG8_REG8( A, H )
GG_END_OPCODE(0x84)

GG_OPCODE(0x85, 1, 4)
GG_OPCODE_REG8_REG8( add, a, l )
GG_ADD_REG8_REG8( A, L )
GG_END_OPCODE(0x85)

GG_OPCODE(0x86, 1, 8)
GG_OPCODE_REG8_REGPTR( add, a, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_ADD_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x86)

GG_OPCODE(0x87, 1, 4)
GG_OPCODE_REG8_REG8( add, a, a )
GG_ADD_REG8_REG8( A, A )
GG_END_OPCODE(0x87)

GG_OPCODE(0x88, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, b )
GG_ADC_REG8_REG8( A, B )
GG_END_OPCODE(0x88)

GG_OPCODE(0x89, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, c )
GG_ADC_REG8_REG8( A, C )
GG_END_OPCODE(0x89)

GG_OPCODE(0x8A, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, d )
GG_ADC_REG8_REG8( A, D )
GG_END_OPCODE(0x8A)

GG_OPCODE(0x8B, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, e )
GG_ADC_REG8_REG8( A, E )
GG_END_OPCODE(0x8B)

GG_OPCODE(0x8C, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, h )
GG_ADC_REG8_REG8( A, H )
GG_END_OPCODE(0x8C)

GG_OPCODE(0x8D, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, l )
GG_ADC_REG8_REG8( A, L )
GG_END_OPCODE(0x8D)

GG_OPCODE(0x8E, 1, 8)
GG_OPCODE_REGPTR_REG8( adc, hl, a )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_ADC_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x8E)

GG_OPCODE(0x8F, 1, 4)
GG_OPCODE_REG8_REG8( adc, a, a )
GG_ADC_REG8_REG8( A, A )
GG_END_OPCODE(0x8F)

GG_OPCODE(0x90, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, b )
GG_SUB_REG8_REG8( A, B )
GG_END_OPCODE(0x90)

GG_OPCODE(0x91, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, c )
GG_SUB_REG8_REG8( A, C )
GG_END_OPCODE(0x91)

GG_OPCODE(0x92, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, d )
GG_SUB_REG8_REG8( A, D )
GG_END_OPCODE(0x92)

GG_OPCODE(0x93, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, e )
GG_SUB_REG8_REG8( A, E )
GG_END_OPCODE(0x93)

GG_OPCODE(0x94, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, h )
GG_SUB_REG8_REG8( A, H )
GG_END_OPCODE(0x94)

GG_OPCODE(0x95, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, l )
GG_SUB_REG8_REG8( A, L )
GG_END_OPCODE(0x95)

GG_OPCODE(0x96, 1, 8)
GG_OPCODE_REG8_REGPTR( sub, a, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_SUB_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x96)

GG_OPCODE(0x97, 1, 4)
GG_OPCODE_REG8_REG8( sub, a, a )
GG_SUB_REG8_REG8( A, A )
GG_END_OPCODE(0x97)

GG_OPCODE(0x98, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, b )
GG_SBC_REG8_REG8( A, B )
GG_END_OPCODE(0x98)

GG_OPCODE(0x99, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, c )
GG_SBC_REG8_REG8( A, C )
GG_END_OPCODE(0x99)

GG_OPCODE(0x9A, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, d )
GG_SBC_REG8_REG8( A, D )
GG_END_OPCODE(0x9A)

GG_OPCODE(0x9B, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, e )
GG_SBC_REG8_REG8( A, E )
GG_END_OPCODE(0x9B)

GG_OPCODE(0x9C, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, h )
GG_SBC_REG8_REG8( A, H )
GG_END_OPCODE(0x9C)

GG_OPCODE(0x9D, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, l )
GG_SBC_REG8_REG8( A, L )
GG_END_OPCODE(0x9D)

GG_OPCODE(0x9E, 1, 8)
GG_OPCODE_REG8_REGPTR( sbc, a, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_SBC_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0x9E)

GG_OPCODE(0x9F, 1, 4)
GG_OPCODE_REG8_REG8( sbc, a, a )
GG_SBC_REG8_REG8( A, A )
GG_END_OPCODE(0x9F)

GG_OPCODE(0xA0, 1, 4)
GG_OPCODE_REGA_REG8( and, b )
GG_BITOP( B, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA0)

GG_OPCODE(0xA1, 1, 4)
GG_OPCODE_REGA_REG8( and, c )
GG_BITOP( C, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA1)

GG_OPCODE(0xA2, 1, 4)
GG_OPCODE_REGA_REG8( and, d )
GG_BITOP( D, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA2)

GG_OPCODE(0xA3, 1, 4)
GG_OPCODE_REGA_REG8( and, e )
GG_BITOP( E, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA3)

GG_OPCODE(0xA4, 1, 4)
GG_OPCODE_REGA_REG8( and, h )
GG_BITOP( H, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA4)

GG_OPCODE(0xA5, 1, 4)
GG_OPCODE_REGA_REG8( and, l )
GG_BITOP( L, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA5)

GG_OPCODE(0xA6, 1, 8)
GG_OPCODE_REGA_REGPTR( and, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_BITOP( TMP0, AND )
GG_LD_REGPTR_REG8( HL, TMP0 )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xA6)

GG_OPCODE(0xA7, 1, 4)
GG_OPCODE_REGA_REG8( and, a )
GG_BITOP( A, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_OPCODE(0xA7)

GG_OPCODE(0xA8, 1, 4)
GG_OPCODE_REGA_REG8( xor, b )
GG_BITOP( B, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xA8)

GG_OPCODE(0xA9, 1, 4)
GG_OPCODE_REGA_REG8( xor, c )
GG_BITOP( C, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xA9)

GG_OPCODE(0xAA, 1, 4)
GG_OPCODE_REGA_REG8( xor, d )
GG_BITOP( D, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xAA)

GG_OPCODE(0xAB, 1, 4)
GG_OPCODE_REGA_REG8( xor, e )
GG_BITOP( E, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xAB)

GG_OPCODE(0xAC, 1, 4)
GG_OPCODE_REGA_REG8( xor, h )
GG_BITOP( H, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xAC)

GG_OPCODE(0xAD, 1, 4)
GG_OPCODE_REGA_REG8( xor, l )
GG_BITOP( L, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xAD)

GG_OPCODE(0xAE, 1, 8)
GG_OPCODE_REGA_REGPTR( xor, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_BITOP( TMP0, XOR )
GG_LD_REGPTR_REG8( HL, TMP0 )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xAE)

GG_OPCODE(0xAF, 1, 4)
GG_OPCODE_REGA_REG8( xor, a )
GG_BITOP( A, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xAF)

GG_OPCODE(0xB0, 1, 4)
GG_OPCODE_REGA_REG8( or, b )
GG_BITOP( B, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB0)

GG_OPCODE(0xB1, 1, 4)
GG_OPCODE_REGA_REG8( or, c )
GG_BITOP( C, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB1)

GG_OPCODE(0xB2, 1, 4)
GG_OPCODE_REGA_REG8( or, d )
GG_BITOP( D, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB2)

GG_OPCODE(0xB3, 1, 4)
GG_OPCODE_REGA_REG8( or, e )
GG_BITOP( E, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB3)

GG_OPCODE(0xB4, 1, 4)
GG_OPCODE_REGA_REG8( or, h )
GG_BITOP( H, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB4)

GG_OPCODE(0xB5, 1, 4)
GG_OPCODE_REGA_REG8( or, l )
GG_BITOP( L, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB5)

GG_OPCODE(0xB6, 1, 8)
GG_OPCODE_REGA_REGPTR( or, hl )
GG_TMP8( 1 )
GG_LD_REG8_REGPTR( TMP0, HL )
GG_BITOP( TMP0, OR )
GG_LD_REGPTR_REG8( HL, TMP0 )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xB6)

GG_OPCODE(0xB7, 1, 4)
GG_OPCODE_REGA_REG8( or, a )
GG_BITOP( A, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_OPCODE(0xB7)

GG_OPCODE(0xB8, 1, 4)
GG_OPCODE_REGA_REG8( cp, b )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, B )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xB8)

GG_OPCODE(0xB9, 1, 4)
GG_OPCODE_REGA_REG8( cp, c )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, C )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xB9)

GG_OPCODE(0xBA, 1, 4)
GG_OPCODE_REGA_REG8( cp, d )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, D )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xBA)

GG_OPCODE(0xBB, 1, 4)
GG_OPCODE_REGA_REG8( cp, e )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, E )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xBB)

GG_OPCODE(0xBC, 1, 4)
GG_OPCODE_REGA_REG8( cp, h )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, H )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xBC)

GG_OPCODE(0xBD, 1, 4)
GG_OPCODE_REGA_REG8( cp, l )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, L )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xBD)

GG_OPCODE(0xBE, 1, 8)
GG_OPCODE_REGA_REGPTR( cp, hl )
GG_TMP8( 2 )
GG_LD_REG8_REGPTR( TMP1, HL )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, TMP1 )
GG_END_TMP8( 2 )
GG_END_OPCODE(0xBE)

GG_OPCODE(0xBF, 1, 4)
GG_OPCODE_REGA_REG8( cp, a )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, A )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xBF)

GG_OPCODE(0xC0, 1, 8)
GG_OPCODE_NO_ARG( retnz )
GG_BEGIN_IF_NOT_FLAG( ZERO )
    GG_TMP16( 1 )
    GG_POP_REG16( TMP0 )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 12 )
    GG_END_TMP16( 1 )
GG_END_IF_NOT_FLAG( ZERO )
GG_END_OPCODE(0xC0)

GG_OPCODE(0xC1, 1, 12)
GG_OPCODE_REG16( pop, bc )
GG_POP_REG16( BC )
GG_END_OPCODE(0xC1)

GG_OPCODE(0xC2, 3, 12)
GG_OPCODE_IMM16( jnz )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_NOT_FLAG( ZERO )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 4 )
GG_END_IF_NOT_FLAG( ZERO )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xC2)

GG_OPCODE(0xC3, 3, 16)
GG_OPCODE_IMM16( jmp )
GG_LD_IMM16( IP )
GG_END_OPCODE(0xC3)

GG_OPCODE(0xC4, 3, 12)
GG_OPCODE_IMM16( callnz )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_NOT_FLAG( ZERO )
    GG_PUSH_REG16( IP )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 12 )
GG_END_IF_NOT_FLAG( ZERO )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xC4)

GG_OPCODE(0xC5, 1, 16)
GG_OPCODE_REG16( push, bc )
GG_PUSH_REG16( BC )
GG_END_OPCODE(0xC5)

GG_OPCODE(0xC6, 2, 8)
GG_OPCODE_REG8_IMM8( add, a )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_ADD_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xC6)

GG_OPCODE(0xC7, 1, 16)
GG_OPCODE_ABSOLUTE( call, 0 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0)
GG_END_OPCODE(0xC7)

GG_OPCODE(0xC8, 1, 8)
GG_OPCODE_NO_ARG( retz )
GG_BEGIN_IF_FLAG( ZERO )
    GG_POP_REG16( IP )
    GG_TIME( 12 )
GG_END_IF_FLAG( ZERO )
GG_END_OPCODE(0xC8)

GG_OPCODE(0xC9, 1, 16)
GG_OPCODE_NO_ARG( ret )
GG_POP_REG16( IP )
GG_END_OPCODE(0xC9)

GG_OPCODE(0xCA, 3, 12)
GG_OPCODE_IMM16( jz )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_FLAG( ZERO )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 4 )
GG_END_IF_FLAG( ZERO )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xCA)

GG_OPCODE(0xCB, 1, 4)
GG_PREFIX_CB( )
GG_END_OPCODE(0xCB)

GG_OPCODE(0xCC, 3, 12)
GG_OPCODE_IMM16( callz )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_FLAG( ZERO )
    GG_PUSH_REG16( IP )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 12 )
GG_END_IF_FLAG( ZERO )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xCC)

GG_OPCODE(0xCD, 3, 24)
GG_OPCODE_IMM16( call )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_PUSH_REG16( IP )
GG_JMP_REG16( TMP0 )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xCD)

GG_OPCODE(0xCE, 2, 8)
GG_OPCODE_REG8_IMM8( adc, a )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_ADC_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xCE)

GG_OPCODE(0xCF, 1, 16)
GG_OPCODE_ABSOLUTE( call, 8 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(8)
GG_END_OPCODE(0xCF)

GG_OPCODE(0xD0, 1, 8)
GG_OPCODE_NO_ARG( retnc )
GG_BEGIN_IF_NOT_FLAG( CARRY )
    GG_TMP16( 1 )
    GG_POP_REG16( TMP0 )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 12 )
    GG_END_TMP16( 1 )
GG_END_IF_NOT_FLAG( CARRY )
GG_END_OPCODE(0xD0)

GG_OPCODE(0xD1, 1, 12)
GG_OPCODE_REG16( pop, de )
GG_POP_REG16( DE )
GG_END_OPCODE(0xD1)

GG_OPCODE(0xD2, 3, 12)
GG_OPCODE_IMM16( jnc )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_NOT_FLAG( CARRY )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 4 )
GG_END_IF_NOT_FLAG( CARRY )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xD2)

GG_OPCODE(0xD3, 1, 4)
GG_ILLEGAL( 0xD3 )
GG_END_OPCODE(0xD3)

GG_OPCODE(0xD4, 3, 12)
GG_OPCODE_IMM16( callnc )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_NOT_FLAG( CARRY )
    GG_PUSH_REG16( IP )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 12 )
GG_END_IF_NOT_FLAG( CARRY )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xD4)

GG_OPCODE(0xD5, 1, 16)
GG_OPCODE_REG16( push, de )
GG_PUSH_REG16( DE )
GG_END_OPCODE(0xD5)

GG_OPCODE(0xD6, 2, 8)
GG_OPCODE_REG8_IMM8( sub, a )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_SUB_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xD6)

GG_OPCODE(0xD7, 1, 16)
GG_OPCODE_ABSOLUTE( call, 16 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0x10)
GG_END_OPCODE(0xD7)

GG_OPCODE(0xD8, 1, 8)
GG_OPCODE_NO_ARG( retc )
GG_BEGIN_IF_FLAG( CARRY )
    GG_POP_REG16( IP )
    GG_TIME( 12 )
GG_END_IF_FLAG( CARRY )
GG_END_OPCODE(0xD8)

GG_OPCODE(0xD9, 1, 16)
GG_OPCODE_NO_ARG( reti )
GG_POP_REG16( IP )
GG_ENABLE_INTERRUPTS( )
GG_END_OPCODE(0xD9)

GG_OPCODE(0xDA, 3, 12)
GG_OPCODE_IMM16( jc )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_FLAG( CARRY )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 4 )
GG_END_IF_FLAG( CARRY )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xDA)

GG_OPCODE(0xDB, 1, 4)
GG_ILLEGAL( 0xDB )
GG_END_OPCODE(0xDB)

GG_OPCODE(0xDC, 3, 12)
GG_OPCODE_NO_ARG( callc )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_BEGIN_IF_FLAG( CARRY )
    GG_PUSH_REG16( IP )
    GG_JMP_REG16( TMP0 )
    GG_TIME( 12 )
GG_END_IF_FLAG( CARRY )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xDC)

GG_OPCODE(0xDD, 1, 4)
GG_ILLEGAL( 0xDD )
GG_END_OPCODE(0xDD)

GG_OPCODE(0xDE, 2, 8)
GG_OPCODE_REG8_IMM8( sbc, a )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_SBC_REG8_REG8( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xDE)

GG_OPCODE(0xDF, 1, 16)
GG_OPCODE_ABSOLUTE( call, 24 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0x18)
GG_END_OPCODE(0xDF)

GG_OPCODE(0xE0, 2, 12)
GG_OPCODE_IMM8HIPTR_REG8( ldh, a )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_LDH_REG8PTR_REG8( TMP0, A )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xE0)

GG_OPCODE(0xE1, 1, 12)
GG_OPCODE_REG16( pop, hl )
GG_POP_REG16( HL )
GG_END_OPCODE(0xE1)

GG_OPCODE(0xE2, 1, 8)
GG_OPCODE_REG8HIPTR_REG8( ldh, c, a )
GG_LDH_REG8PTR_REG8( C, A )
GG_END_OPCODE(0xE2)

GG_OPCODE(0xE3, 1, 4)
GG_ILLEGAL( 0xE3 )
GG_END_OPCODE(0xE3)

GG_OPCODE(0xE4, 1, 4)
GG_ILLEGAL( 0xE4 )
GG_END_OPCODE(0xE4)

GG_OPCODE(0xE5, 1, 16)
GG_OPCODE_REG16( push, hl )
GG_PUSH_REG16( HL )
GG_END_OPCODE(0xE5)

GG_OPCODE(0xE6, 2, 8)
GG_OPCODE_REGA_IMM8( and )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BITOP( TMP0, AND )
GG_CLEAR_FLAG2( OPERATION, CARRY )
GG_SET_FLAG( HALF_CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xE6)

GG_OPCODE(0xE7, 1, 16)
GG_OPCODE_ABSOLUTE( call, 32 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0x20)
GG_END_OPCODE(0xE7)

GG_OPCODE(0xE8, 2, 16)
GG_OPCODE_REG16_IMM8( add, sp )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_ADD_REG16_REG16( SP, TMP0 )
GG_CLEAR_FLAG( ZERO )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xE8)

GG_OPCODE(0xE9, 1, 4)
GG_OPCODE_REGPTR( jmp, hl )
GG_TMP16( 1 )
GG_LD_REG16_REGPTR( TMP0, HL )
GG_JMP_REG16( TMP0 )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xE9)

GG_OPCODE(0xEA, 3, 12)
GG_OPCODE_IMMPTR_REG8( ld, a )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_LD_REGPTR_REG8( TMP0, A )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xEA)

GG_OPCODE(0xEB, 1, 4)
GG_ILLEGAL( 0xEB )
GG_END_OPCODE(0xEB)

GG_OPCODE(0xEC, 1, 4)
GG_ILLEGAL( 0xEC )
GG_END_OPCODE(0xEC)

GG_OPCODE(0xED, 1, 4)
GG_ILLEGAL( 0xED )
GG_END_OPCODE(0xED)

GG_OPCODE(0xEE, 2, 8)
GG_OPCODE_REGA_IMM8( xor )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BITOP( TMP0, XOR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xEE)

GG_OPCODE(0xEF, 1, 16)
GG_OPCODE_ABSOLUTE( call, 40 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0x28)
GG_END_OPCODE(0xEF)

GG_OPCODE(0xF0, 2, 12)
GG_OPCODE_REG8_IMM8HIPTR( ldh, a )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_LDH_REG8_REG8PTR( A, TMP0 )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xF0)

GG_OPCODE(0xF1, 1, 12)
GG_OPCODE_REG16( pop, af )
GG_POP_REG16( AF )
GG_END_OPCODE(0xF1)

GG_OPCODE(0xF2, 1, 8)
GG_OPCODE_REG8_REG8HIPTR( ldh, a, c )
GG_LDH_REG8_REG8PTR( A, C )
GG_END_OPCODE(0xF2)

GG_OPCODE(0xF3, 1, 4)
GG_OPCODE_NO_ARG( di )
GG_DISABLE_INTERRUPTS( )
GG_END_OPCODE(0xF3)

GG_OPCODE(0xF4, 1, 4)
GG_ILLEGAL( 0xF4 )
GG_END_OPCODE(0xF4)

GG_OPCODE(0xF5, 1, 16)
GG_OPCODE_REG16( push, af )
GG_PUSH_REG16( AF )
GG_END_OPCODE(0xF5)

GG_OPCODE(0xF6, 2, 8)
GG_OPCODE_REGA_IMM8( or )
GG_TMP8( 1 )
GG_LD_IMM8( TMP0 )
GG_BITOP( TMP0, OR )
GG_CLEAR_FLAG3( OPERATION, CARRY, HALF_CARRY )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xF6)

GG_OPCODE(0xF7, 1, 16)
GG_OPCODE_ABSOLUTE( call, 48 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0x30)
GG_END_OPCODE(0xF7)

GG_OPCODE(0xF8, 2, 12)
GG_OPCODE_NO_ARG( ldhlspimm8 )
GG_TMP16( 1 )
GG_LD_IMM8( TMP1 )
GG_LD_REG_REG( HL, SP )
GG_ADD_REG16_REG16( HL, TMP1 )
GG_CLEAR_FLAG( ZERO )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xF8)

GG_OPCODE(0xF9, 1, 8)
GG_OPCODE_REG16_REG16( ld, sp, hl )
GG_LD_REG_REG( SP, HL )
GG_END_OPCODE(0xF9)

GG_OPCODE(0xFA, 3, 12)
GG_OPCODE_REG8_IMMPTR( ld, a )
GG_TMP16( 1 )
GG_LD_IMM16( TMP0 )
GG_LD_REGPTR_REG8( TMP0, A )
GG_END_TMP16( 1 )
GG_END_OPCODE(0xFA)

GG_OPCODE(0xFB, 1, 4)
GG_OPCODE_NO_ARG( ei )
GG_ENABLE_INTERRUPTS( )
GG_END_OPCODE(0xFB)

GG_OPCODE(0xFC, 1, 4)
GG_ILLEGAL( 0xFC )
GG_END_OPCODE(0xFC)

GG_OPCODE(0xFD, 1, 4)
GG_ILLEGAL( 0xFD )
GG_END_OPCODE(0xFD)

GG_OPCODE(0xFE, 2, 8)
GG_OPCODE_REGA_IMM8( cp )
GG_TMP8( 1 )
GG_LD_REG_REG( TMP0, A )
GG_SUB_REG8_REG8( TMP0, B )
GG_END_TMP8( 1 )
GG_END_OPCODE(0xFE)

GG_OPCODE(0xFF, 1, 16)
GG_OPCODE_ABSOLUTE( call, 56 )
GG_PUSH_REG16( IP )
GG_JMP_ABS(0x38)
GG_END_OPCODE(0xFF)
